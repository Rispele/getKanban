@model WebApp.Models.DayStepModels.StepModel

<div class="stepHeader">
    <h1 class="fs-1 fw- text-center">Команда @Html.Raw(Model.TeamName). День @Model.DayNumber</h1>
</div>

<div class="infoContainer height-large centered-100">
    <h1 class="fs-4 text-center">
        Стендап-совещание
    </h1>

    <div class="info height-small centered-100">
        <p class="fs-5 fw-normal">Отсортируйте тикеты в колонках.</p>
        <p class="fs-5 fw-normal">Определите будете ли вы менять распределение членов команды по функциям</p>
    </div>
</div>

<button class="stepControlButtons rightButton" id="next">
    Далее
</button>

<script src="~/js/page-switch.js"></script>
<script src="~/js/setup-hub-connection.js"></script>
<script src="/js/signalr/dist/browser/signalr.js"></script>
<script type="module">
    const connection = setupHubConnection(new signalR.HubConnectionBuilder(), "@Model.GameSessionId", "@Model.TeamId");
    
    if (await checkPageAvailable("@Model.GameSessionId", "@Model.TeamId", "roll") !== true ||
        await checkPageAvailable("@Model.GameSessionId", "@Model.TeamId", "update-role") !== true
    ) {
        const response = await fetch(`/@Model.GameSessionId/@Model.TeamId/api/get-current-step`);
        const page = await response.text();
        console.log(page);
        const pageNumber = parseInt(page.split('/')[0]);
        const stageNumber = parseInt(page.split('/')[1]);
        connection.invoke("ChangePage", "@Model.GameSessionId", "@Model.TeamId", pageNumber, stageNumber)
            .then(() => {
                window.location.href = `/@Model.GameSessionId/@Model.TeamId/step/${page}`;
            });
    }
    
    setSwitchEvent("next", connection, "@Model.GameSessionId", "@Model.TeamId", 1, 1);
    setRollbackEvent(connection);

</script>