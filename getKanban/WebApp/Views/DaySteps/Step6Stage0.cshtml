@model WebApp.Models.DayFullIdDto

<div class="container3">
    <h1 class="title">Заполните таблицу, отметив сколько тикетов на доске на данный момент</h1>
    <h1 class="title">Цвет колонки соответствует цвету стрелки.</h1>
    <hr class="divider">
    
    <div class="mine_table">
        <div class="row-60 rowStyle1">
            <div class="rowName">
                <p class="text-center fs-6 text-top-margin">Работа аналитиков</p>
            </div>
            <input type="number" class="graphPageInput rowStyle1" placeholder="0" id="with-analysts">
        </div>
        <div class="row-60 rowStyle2">
            <div class="rowName">
                <p class="text-center fs-6 text-top-margin">Работа разработчиков</p>
            </div>
            <input type="number" class="graphPageInput rowStyle2" placeholder="0" id="with-programmers">
        </div>
        <div class="row-60 rowStyle3">
            <div class="rowName">
                <p class="text-center fs-6 text-top-margin">Работа тестировщиков</p>
            </div>
            <input type="number" class="graphPageInput rowStyle3" placeholder="0" id="with-testers">
        </div>
        <div class="row-60 rowStyle4">
            <div class="rowName">
                <p class="text-center fs-6 text-top-margin">Готовы к поставке</p>
            </div>
            <input type="number" class="graphPageInput rowStyle4" placeholder="0" id="to-deploy">
        </div>
        <div class="row-60 rowStyle5">
            <div class="rowName">
                <p class="text-center fs-6 text-top-margin">Поставлено</p>
            </div>
            <input type="number" class="graphPageInput rowStyle5" placeholder="0" id="released">
        </div>
    </div>

    <button class="stepControlButtons position-relative rightButton" id="save-cfd">
        <p class="fs-6">Сохранить</p>
    </button>
</div>

<script src="/js/signalr/dist/browser/signalr.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder().withUrl("/lobbyHub").build();
    connection.start()
        .then(function () {
            connection.invoke("Join", "@Model");
        });
    connection.on("NotifyPageChange", function (page, stage) {
        window.location.href = `/step/${page}/${stage}`;
    });
    
    document.getElementById('save-cfd').addEventListener('click', function () {
        const released = document.getElementById('released').value;
        const toDeploy = document.getElementById('to-deploy').value;
        const withTesters = document.getElementById('with-testers').value;
        const withProgrammers = document.getElementById('with-programmers').value;
        const withAnalysts = document.getElementById('with-analysts').value;
        
        fetch("/step/update-cfd", {
            method: 'POST',
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                released: released,
                toDeploy: toDeploy,
                withTesters: withTesters,
                withProgrammers: withProgrammers,
                withAnalysts: withAnalysts
            })
        }).then(function () {
            connection.invoke("ChangePage", "@Model", 6, 1)
                .then(function () {
                    window.location.href = `/step/6/1`;
                });
        });
    });
    

</script>