@using Core.Dtos.Containers.RollDice
@using Core.Dtos.Containers.TeamMembers
@model (Guid? currentSessionId, Core.Dtos.Containers.RollDice.RollDiceContainerDto diceResults)

<div class="stepHeader">
    <h1 class="fs-1 fw- text-center">Команда pipipupu. День 9</h1>
</div>

@functions
{
    private IEnumerable<int> SelectDiceNumber(TeamRoleDto initialRole) =>
        GetDiceRollResultsByInitialRole(initialRole)
            .Select(t => t.DiceNumber);

    private IEnumerable<int> SelectScores(TeamRoleDto initialRole) =>
        GetDiceRollResultsByInitialRole(initialRole)
            .Select(t => t.Scores);

    private IEnumerable<DiceRollResultDto> GetDiceRollResultsByInitialRole(TeamRoleDto initialRole) =>
        Model.diceResults.DiceRollResults
            .Where(t => t.InitialRole == initialRole);
}

<div class="infoContainer height-large centered-100">
    <h1 class="fs-4 text-center">
        Доска
    </h1>
    
    <div class="info height-small centered-100">
        <p class="fs-5 fw-normal">Остатки работ можно потратить в течение дня. Имейте в виду, что между днями неиспользованные работы сгорают.</p>
        <p class="fs-5 fw-normal">При необходимости, переместите новые тикеты (проверьте, чтоб соблюдалось ограничение WIP).</p>
        <p class="fs-5 fw-normal">Потратьте остаток работ на другие тикеты.</p>
    </div>
    
    <div>
        <p>Результат броска для аналитиков: @string.Join(" ", SelectDiceNumber(TeamRoleDto.Analyst))</p>
        <p>Результат броска для разработчиков: @string.Join(" ", SelectDiceNumber(TeamRoleDto.Programmer))</p>
        <p>Результат броска для тестировщиков: @string.Join(" ", SelectDiceNumber(TeamRoleDto.Tester))</p>
        <p>Итоговый счет для аналитиков: @string.Join(" ", SelectScores(TeamRoleDto.Analyst))</p>
        <p>Итоговый счет для разработчиков: @string.Join(" ", SelectScores(TeamRoleDto.Programmer))</p>
        <p>Итоговый счет для тестировщиков: @string.Join(" ", SelectScores(TeamRoleDto.Tester))</p>
    </div>
</div>

<button class="stepControlButtons rightButton" id="next">
    Далее
</button>

<script src="/js/signalr/dist/browser/signalr.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder().withUrl("/lobbyHub").build();
    connection.start();
    connection.on("NotifyPageChange", function (page, stage) {
        window.location.href = `/step/${page}/${stage}`;
    });

    document.getElementById("next").addEventListener('click', function () {
        connection.invoke("ChangePage", "@Model.currentSessionId", 3, 0)
            .then(function () {
                window.location.href = `/step/3`;
            });
    });
</script>