@model WebApp.Models.DayStepModels.FinishGameStepModel

<div class="stepHeader">
    <h1 class="fs-1 fw- text-center">Команда @Html.Raw(Model.TeamName). День @Model.DayNumber</h1>
</div>

<div class="infoContainer height-large centered-100">
    <h1 class="fs-4 text-center">
        Событие
    </h1>

    <div class="info height-small centered-100">
        <p class="fs-5 fw-normal">@Model.EndDayEventMessage</p>
    </div>
</div>

<button class="stepControlButtons rightButton" id="prev">
    Назад
</button>

@if (Model.ShouldFinishGame)
{
    <button class="stepControlButtons rightButton" id="finish-game">
        Закончить игру
    </button>
}
else
{
    <button class="stepControlButtons rightButton" id="next-day">
        Следующий день
    </button>
}


<script src="~/js/page-switch.js"></script>
<script src="~/js/setup-hub-connection.js"></script>
<script src="/js/signalr/dist/browser/signalr.js"></script>
<script>
    const connection = setupHubConnection(new signalR.HubConnectionBuilder(), "@Model.GameSessionId", "@Model.TeamId");
    setSwitchEvent("prev", connection, "@Model.GameSessionId", "@Model.TeamId", 7, 0);
    setRollbackEvent(connection);
    
    connection.on(`NotifyGameFinished`, (sessionId, teamId) => {
        window.location.href = `/${sessionId}/${teamId}/step/game-result`;
    });
    
    if (@((!Model.ShouldFinishGame).ToString().ToLower())) {
        const nextDayButton = document.getElementById("next-day");
        if (nextDayButton !== null && nextDayButton !== undefined) {
            nextDayButton.addEventListener('click', () => {
                fetch(`/@Model.GameSessionId/@Model.TeamId/api/end-day`, {
                    method: 'POST',
                    headers: { "Content-Type": "application/json" },
                }).then(() => {
                    connection.invoke("FinishDay", "@Model.GameSessionId", "@Model.TeamId");
                    connection.invoke("ChangePage", "@Model.GameSessionId", "@Model.TeamId", 1, 0)
                        .then(() => {
                            window.location.href = `/@Model.GameSessionId/@Model.TeamId/step/1`;
                        });
                })
            });
        }
    } else {
        const finishGameButton = document.getElementById("finish-game");
        if (finishGameButton !== null && finishGameButton !== undefined) {
            finishGameButton.addEventListener('click', () => {
                connection.invoke("ShowGameResult", "@Model.GameSessionId", "@Model.TeamId")
                    .then(() => {
                        window.location.href = `/@Model.GameSessionId/@Model.TeamId/step/game-result`;
                    });
            });
        }
    }
</script>